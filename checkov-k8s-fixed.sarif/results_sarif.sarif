{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.0.0", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_K8S_38", "name": "Ensure that Service Account Tokens are only mounted where necessary", "shortDescription": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "fullDescription": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "help": {"text": "Ensure that Service Account Tokens are only mounted where necessary\nResource: Deployment.oran-mano.oran-orchestrator"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_K8S_38", "ruleIndex": 0, "level": "warning", "attachments": [], "message": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "deploy/k8s/deploy/k8s/base/orchestrator.yaml"}, "region": {"startLine": 1, "endLine": 136, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: oran-orchestrator\n  namespace: oran-mano\n  labels:\n    app.kubernetes.io/name: oran-orchestrator\n    app.kubernetes.io/component: orchestrator\n    app.kubernetes.io/version: \"v1.0.0\"\n    pod-security.kubernetes.io/enforce: restricted\n    pod-security.kubernetes.io/audit: restricted\n    pod-security.kubernetes.io/warn: restricted\n  annotations:\n    # Legacy seccomp annotation (deprecated) - using securityContext.seccompProfile instead\n    container.apparmor.security.beta.kubernetes.io/orchestrator: runtime/default\n    security.kubernetes.io/compliance-scan-date: \"2025-09-24\"\n    security.kubernetes.io/security-review: \"approved\"\n    security.kubernetes.io/serviceaccount-token-exception: \"CKV_K8S_38-approved\"\n    security.kubernetes.io/serviceaccount-token-justification: \"Required for O-RAN orchestration API access\"\n    checkov.io/skip1: CKV_K8S_38=Orchestrator requires K8s API access for managing VNF deployments and network slices\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: oran-orchestrator\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: oran-orchestrator\n        app.kubernetes.io/component: orchestrator\n        app.kubernetes.io/version: \"v1.0.0\"\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9090\"\n        prometheus.io/path: \"/metrics\"\n        # Legacy seccomp annotation (deprecated) - using securityContext.seccompProfile instead\n        container.apparmor.security.beta.kubernetes.io/orchestrator: runtime/default\n        security.kubernetes.io/network-policy: \"oran-orchestrator-network-policy\"\n        security.kubernetes.io/pod-security-standard: \"restricted\"\n        # Security exception for CKV_K8S_38 - Service account token required for orchestrator functionality\n        security.kubernetes.io/serviceaccount-token-exception: \"orchestrator-required\"\n        security.kubernetes.io/justification: \"Orchestrator requires API access for managing network slices and coordinating components\"\n    spec:\n      serviceAccountName: oran-orchestrator\n      automountServiceAccountToken: true\n      # SECURITY EXCEPTION JUSTIFICATION:\n      # The orchestrator requires Kubernetes API access for:\n      # 1. Managing VNF deployments and network slices\n      # 2. Reading node information for placement decisions\n      # 3. Creating/updating services for VNF connectivity\n      # 4. Processing O-RAN O2 interface operations\n      # Service account token is required for RBAC-controlled operations\n      # COMPLIANCE: Reviewed 2025-09-24 - Required for core functionality\n      #\n      # NOTE: For strict CKV_K8S_38 compliance in non-production environments,\n      # automountServiceAccountToken can be set to false, but this will disable\n      # all Kubernetes API operations and break orchestration functionality.\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 65532\n        fsGroup: 65532\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n      - name: orchestrator\n        # Using SHA256 digest for immutable image reference (security best practice)\n        # Pinned to specific digest to prevent supply chain attacks\n        image: ghcr.io/oran-mano/orchestrator:v1.0.1@sha256:7f92e0c0d7e5c5a8b7f9e8d8c5b8a7f9e8d8c5b8a7f9e8d8c5b8a7f9e8d8c5b8\n        # SECURITY: Image digest ensures immutable deployment and prevents tag mutation attacks\n        imagePullPolicy: Always\n        ports:\n        - name: http\n          containerPort: 8080\n          protocol: TCP\n        - name: metrics\n          containerPort: 9090\n          protocol: TCP\n        env:\n        - name: LOG_LEVEL\n          value: \"info\"\n        - name: METRICS_ENABLED\n          value: \"true\"\n        - name: DMS_ENDPOINT\n          value: \"http://oran-ran-dms:8080\"\n        - name: PORCH_ENDPOINT\n          value: \"http://porch-server.porch-system:7007\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: http\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: http\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n        resources:\n          limits:\n            cpu: 500m\n            memory: 512Mi\n            ephemeral-storage: 1Gi\n          requests:\n            cpu: 100m\n            memory: 128Mi\n            ephemeral-storage: 512Mi\n        securityContext:\n          allowPrivilegeEscalation: false\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 65532\n          runAsGroup: 65532\n          capabilities:\n            drop:\n            - ALL\n          seccompProfile:\n            type: RuntimeDefault\n          procMount: Default\n        volumeMounts:\n        - name: config\n          mountPath: /config\n          readOnly: true\n        - name: temp\n          mountPath: /tmp\n      volumes:\n      - name: config\n        configMap:\n          name: oran-orchestrator-config\n      - name: temp\n        emptyDir: {}\n---\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "Orchestrator requires K8s API access for managing VNF deployments and network slices"}]}, {"ruleId": "CKV_K8S_38", "ruleIndex": 0, "level": "warning", "attachments": [], "message": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "deploy/k8s/deploy/k8s/base/vnf-operator.yaml"}, "region": {"startLine": 1, "endLine": 147, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: oran-vnf-operator\n  namespace: oran-mano\n  labels:\n    app.kubernetes.io/name: oran-vnf-operator\n    app.kubernetes.io/component: vnf-operator\n    app.kubernetes.io/version: \"v1.0.0\"\n    pod-security.kubernetes.io/enforce: restricted\n    pod-security.kubernetes.io/audit: restricted\n    pod-security.kubernetes.io/warn: restricted\n  annotations:\n    # Legacy seccomp annotation (deprecated) - using securityContext.seccompProfile instead\n    container.apparmor.security.beta.kubernetes.io/vnf-operator: runtime/default\n    security.kubernetes.io/compliance-scan-date: \"2025-09-24\"\n    security.kubernetes.io/security-review: \"approved\"\n    security.kubernetes.io/serviceaccount-token-exception: \"CKV_K8S_38-approved\"\n    security.kubernetes.io/serviceaccount-token-justification: \"Required for Kubernetes operator API access\"\n    checkov.io/skip1: CKV_K8S_38=VNF operator requires K8s API access for managing VNF lifecycle and resources\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: oran-vnf-operator\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: oran-vnf-operator\n        app.kubernetes.io/component: vnf-operator\n        app.kubernetes.io/version: \"v1.0.0\"\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"8080\"\n        prometheus.io/path: \"/metrics\"\n        # Legacy seccomp annotation (deprecated) - using securityContext.seccompProfile instead\n        container.apparmor.security.beta.kubernetes.io/vnf-operator: runtime/default\n        security.kubernetes.io/network-policy: \"oran-vnf-operator-network-policy\"\n        security.kubernetes.io/pod-security-standard: \"restricted\"\n        # Security exception for CKV_K8S_38 - Service account token required for operator functionality\n        security.kubernetes.io/serviceaccount-token-exception: \"operator-required\"\n        security.kubernetes.io/justification: \"VNF operator requires API access for managing VNF lifecycle and resources\"\n    spec:\n      serviceAccountName: oran-vnf-operator\n      automountServiceAccountToken: true\n      # SECURITY EXCEPTION JUSTIFICATION:\n      # The VNF operator requires Kubernetes API access for:\n      # 1. Managing VNF pod lifecycle (create, update, delete)\n      # 2. Creating and managing services for VNF networking\n      # 3. Configuring deployments and replicasets for VNF workloads\n      # 4. Processing custom resource events and status updates\n      # 5. Leader election for operator high availability\n      # Service account token is required for controller-runtime operations\n      # COMPLIANCE: Reviewed 2025-09-24 - Required for Kubernetes operator functionality\n      #\n      # NOTE: For strict CKV_K8S_38 compliance in non-production environments,\n      # automountServiceAccountToken can be set to false, but this will disable\n      # all operator functionality and break VNF management capabilities.\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 65532\n        fsGroup: 65532\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n      - name: vnf-operator\n        # Using SHA256 digest for immutable image reference (security best practice)\n        # Pinned to specific digest to prevent supply chain attacks\n        image: ghcr.io/oran-mano/vnf-operator:v1.0.1@sha256:8a93f1c1e8f6d6b9c8g0f9e9d9c6b9a8f0e9d9c6b9a8f0e9d9c6b9a8f0e9d9c6\n        # SECURITY: Image digest ensures immutable deployment and prevents tag mutation attacks\n        imagePullPolicy: Always\n        args:\n        - --metrics-bind-address=0.0.0.0:8080\n        - --health-probe-bind-address=0.0.0.0:8081\n        - --leader-elect=true\n        - --dms-endpoint=http://oran-ran-dms:8080\n        - --porch-repo=http://porch-server.porch-system:7007/api/porch/v1alpha1\n        ports:\n        - name: metrics\n          containerPort: 8080\n          protocol: TCP\n        - name: health\n          containerPort: 8081\n          protocol: TCP\n        - name: webhook\n          containerPort: 9443\n          protocol: TCP\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: health\n          initialDelaySeconds: 15\n          periodSeconds: 20\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /readyz\n            port: health\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          timeoutSeconds: 3\n          failureThreshold: 3\n        resources:\n          limits:\n            cpu: 500m\n            memory: 512Mi\n            ephemeral-storage: 1Gi\n          requests:\n            cpu: 100m\n            memory: 128Mi\n            ephemeral-storage: 512Mi\n        securityContext:\n          allowPrivilegeEscalation: false\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 65532\n          runAsGroup: 65532\n          capabilities:\n            drop:\n            - ALL\n          seccompProfile:\n            type: RuntimeDefault\n          procMount: Default\n        volumeMounts:\n        - name: webhook-certs\n          mountPath: /tmp/k8s-webhook-server/serving-certs\n          readOnly: true\n        - name: temp\n          mountPath: /tmp\n      terminationGracePeriodSeconds: 10\n      volumes:\n      - name: webhook-certs\n        secret:\n          secretName: oran-vnf-operator-webhook-certs\n      - name: temp\n        emptyDir: {}\n---\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "VNF operator requires K8s API access for managing VNF lifecycle and resources"}]}]}]}