# Prometheus configuration for O-RAN Intent-MANO
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'oran-mano-local'
    environment: 'development'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets: []

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # O-RAN MANO Services
  - job_name: 'oran-orchestrator'
    static_configs:
      - targets: ['orchestrator:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'
    params:
      format: ['prometheus']

  - job_name: 'oran-vnf-operator'
    static_configs:
      - targets: ['vnf-operator:8080']
    scrape_interval: 15s
    metrics_path: '/metrics'

  - job_name: 'oran-o2-client'
    static_configs:
      - targets: ['o2-client:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'

  - job_name: 'oran-tn-manager'
    static_configs:
      - targets: ['tn-manager:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'

  - job_name: 'oran-ran-dms'
    static_configs:
      - targets: ['ran-dms:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'

  - job_name: 'oran-cn-dms'
    static_configs:
      - targets: ['cn-dms:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'

  # TN Agents
  - job_name: 'oran-tn-agents'
    static_configs:
      - targets:
        - 'tn-agent-edge01:9090'
        - 'tn-agent-edge02:9090'
    scrape_interval: 15s
    metrics_path: '/metrics'

  # Docker container metrics (if cAdvisor is available)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Node metrics (if node-exporter is available)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: '/metrics'

# Service discovery for Docker containers
  - job_name: 'docker-containers'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      - source_labels: [__meta_dockerswarm_service_name]
        target_label: job
      - source_labels: [__meta_dockerswarm_task_port_published_port]
        target_label: __address__
        replacement: 'localhost:${1}'