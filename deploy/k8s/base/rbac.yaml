apiVersion: v1
kind: ServiceAccount
metadata:
  name: oran-orchestrator
  namespace: oran-mano
  labels:
    app.kubernetes.io/name: oran-orchestrator
    app.kubernetes.io/component: orchestrator
  annotations:
    # Security justification for service account token access
    security.policy/api-access-reason: "Required for O-RAN orchestration operations"
automountServiceAccountToken: true
# SECURITY EXCEPTION: Service account token required for:
# - Managing VNF deployments and network slices
# - Reading cluster state for placement decisions
# - Coordinating with O2 DMS services
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oran-vnf-operator
  namespace: oran-mano
  labels:
    app.kubernetes.io/name: oran-vnf-operator
    app.kubernetes.io/component: vnf-operator
  annotations:
    # Security justification for service account token access
    security.policy/api-access-reason: "Required for VNF lifecycle management operations"
automountServiceAccountToken: true
# SECURITY EXCEPTION: Service account token required for:
# - VNF pod lifecycle management (create, update, delete)
# - Kubernetes controller operations and leader election
# - Custom resource processing and status updates
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oran-o2-client
  namespace: oran-mano
  labels:
    app.kubernetes.io/name: oran-o2-client
    app.kubernetes.io/component: o2-client
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oran-o2-client
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["o2ims.oran.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["porch.kpt.dev"]
  resources: ["packagerevisions", "packages", "repositories"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oran-o2-client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oran-o2-client
subjects:
- kind: ServiceAccount
  name: oran-o2-client
  namespace: oran-mano
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oran-tn-manager
  namespace: oran-mano
  labels:
    app.kubernetes.io/name: oran-tn-manager
    app.kubernetes.io/component: tn-manager
automountServiceAccountToken: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oran-tn-agent
  namespace: oran-edge
  labels:
    app.kubernetes.io/name: oran-tn-agent
    app.kubernetes.io/component: tn-agent
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oran-orchestrator
rules:
# Read-only access to nodes for placement decisions
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
# Limited pod operations (only get/list/watch for monitoring)
- apiGroups: [""]
  resources: ["pods", "pods/status"]
  verbs: ["get", "list", "watch"]
# Service management for VNF connectivity
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ConfigMap and Secret access (read-only for config, limited write for generated configs)
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Application deployment management
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
# Network policy management for slice isolation
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
# Custom resource management
- apiGroups: ["mano.oran.io"]
  resources: ["vnfs", "networkslices", "intents"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["mano.oran.io"]
  resources: ["vnfs/status", "networkslices/status", "intents/status"]
  verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oran-vnf-operator
rules:
# Pod management for VNF lifecycle
- apiGroups: [""]
  resources: ["pods", "pods/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Service management for VNF networking
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# ConfigMap management for VNF configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Secret access (read-only for security)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Deployment management for VNF workloads
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["replicasets", "replicasets/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# VNF custom resource management
- apiGroups: ["mano.oran.io"]
  resources: ["vnfs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["mano.oran.io"]
  resources: ["vnfs/status", "vnfs/finalizers"]
  verbs: ["get", "update", "patch"]
# Events for debugging and monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oran-tn-manager
rules:
- apiGroups: [""]
  resources: ["nodes", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["mano.oran.io"]
  resources: ["transportnetworks", "qospolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oran-tn-agent
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oran-orchestrator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oran-orchestrator
subjects:
- kind: ServiceAccount
  name: oran-orchestrator
  namespace: oran-mano
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oran-vnf-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oran-vnf-operator
subjects:
- kind: ServiceAccount
  name: oran-vnf-operator
  namespace: oran-mano
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oran-tn-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oran-tn-manager
subjects:
- kind: ServiceAccount
  name: oran-tn-manager
  namespace: oran-mano
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oran-tn-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oran-tn-agent
subjects:
- kind: ServiceAccount
  name: oran-tn-agent
  namespace: oran-edge