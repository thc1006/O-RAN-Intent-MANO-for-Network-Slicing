# Prometheus Operator Helm Values for O-RAN MANO
prometheus:
  prometheusSpec:
    # Resource configuration
    resources:
      requests:
        memory: 400Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m

    # Storage configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: fast-ssd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

    # Retention and scraping configuration
    retention: 15d
    retentionSize: 45GB
    scrapeInterval: 30s
    scrapeTimeout: 10s
    evaluationInterval: 30s

    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534

    # Service monitor discovery
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector:
      matchLabels:
        app.kubernetes.io/part-of: o-ran-mano

    # Pod monitor discovery
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector:
      matchLabels:
        app.kubernetes.io/part-of: o-ran-mano

    # Rule selector
    ruleSelectorNilUsesHelmValues: false
    ruleSelector:
      matchLabels:
        app.kubernetes.io/part-of: o-ran-mano

    # Additional scrape configs for O-RAN components
    additionalScrapeConfigs:
    - job_name: 'oran-orchestrator'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - oran-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'oran-dms-components'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - oran-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_component]
        action: keep
        regex: dms
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__

# Alertmanager configuration
alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        memory: 100Mi
        cpu: 50m
      limits:
        memory: 200Mi
        cpu: 100m

    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: fast-ssd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534

# Grafana configuration
grafana:
  enabled: true
  adminPassword: oran-admin-2024

  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 300Mi
      cpu: 200m

  persistence:
    enabled: true
    size: 10Gi
    storageClassName: fast-ssd

  # Data sources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-kube-prometheus-prometheus:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: 30s

  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'oran-dashboards'
        orgId: 1
        folder: 'O-RAN MANO'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/oran-dashboards

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    fsGroup: 472

# Node Exporter
nodeExporter:
  enabled: true
  resources:
    requests:
      memory: 30Mi
      cpu: 10m
    limits:
      memory: 50Mi
      cpu: 20m

# Kube State Metrics
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      memory: 32Mi
      cpu: 10m
    limits:
      memory: 64Mi
      cpu: 20m

# Prometheus Operator
prometheusOperator:
  enabled: true
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 100m

  securityContext:
    runAsNonRoot: true
    runAsUser: 65534

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# Common labels
commonLabels:
  app.kubernetes.io/part-of: o-ran-mano
  environment: production
  monitoring.oran.io/managed-by: prometheus-operator