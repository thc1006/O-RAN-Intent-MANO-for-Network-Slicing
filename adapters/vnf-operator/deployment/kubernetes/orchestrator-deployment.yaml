---
apiVersion: v1
kind: ConfigMap
metadata:
  name: orchestrator-config
  namespace: oran-system
  labels:
    app: orchestrator
    component: o-ran-mano
data:
  config.yaml: |
    server:
      port: 8080
      metrics_port: 9090
    logging:
      level: info
      format: json
    intent:
      processing_timeout: 30s
      max_concurrent: 10
    placement:
      algorithm: load_aware
      metrics_interval: 30s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: oran-system
  labels:
    app: orchestrator
    component: o-ran-mano
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        component: o-ran-mano
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: orchestrator
        image: oran-mano/orchestrator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: CONFIG_PATH
          value: "/etc/orchestrator/config.yaml"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config
          mountPath: /etc/orchestrator
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: orchestrator-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: orchestrator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchestrator
  namespace: oran-system
  labels:
    app: orchestrator
    component: o-ran-mano
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: oran-system
  labels:
    app: orchestrator
    component: o-ran-mano
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: orchestrator
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: orchestrator-pdb
  namespace: oran-system
  labels:
    app: orchestrator
    component: o-ran-mano
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: orchestrator